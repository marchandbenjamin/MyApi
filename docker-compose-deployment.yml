services:
    traefik:
        image: traefik:v2.11
        container_name: traefik
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        command:
            - "--entrypoints.web.address=:80"
            - "--entrypoints.websecure.address=:443"
            - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
            - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
            - "--providers.docker=true"
            - "--certificatesresolvers.le.acme.httpchallenge=true"
            - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=web"
            - "--certificatesresolvers.le.acme.email=${LETS_ENCRYPT_EMAIL}"
            - "--certificatesresolvers.le.acme.storage=/letsencrypt/certificates.json"
            - "--log.level=INFO"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
            - "ssl-storage:/letsencrypt"
        networks:
            - web

    my-board-games-api:
        depends_on:
            - postgres
        build:
            context: .
            dockerfile: Dockerfile
        container_name: my-board-games-api
        ports:
            - "61000:8080"
        restart: unless-stopped
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.api.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/api`)"
            - "traefik.http.routers.api.entrypoints=websecure"
            - "traefik.http.routers.api.tls.certresolver=le"
            - "traefik.http.services.api.loadbalancer.server.port=8080"
        networks:
            - web

    keycloak:
        depends_on:
            - postgres
        image: quay.io/keycloak/keycloak:26.1.0
        command: start
        container_name: keycloak
        environment:
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
            KC_HTTP_ENABLED: "true"
            KC_HTTP_RELATIVE_PATH: /identity
            KC_HOSTNAME: ${DOMAIN_NAME}
            KC_HOSTNAME_STRICT: "false"
            KC_PROXY: edge
            KC_DB: postgres
            KC_DB_URL_HOST: postgres
            KC_DB_URL_DATABASE: ${POSTGRESQL_DB_NAME}
            KC_DB_SCHEMA: keycloak
            KC_DB_USERNAME: ${POSTGRESQL_USER}
            KC_DB_PASSWORD: ${POSTGRESQL_PASSWORD}
        networks:
            - web
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.keycloak.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/identity`)"
            - "traefik.http.routers.keycloak.entrypoints=websecure"
            - "traefik.http.routers.keycloak.tls.certresolver=le"
            - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
            - "traefik.http.middlewares.forward-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
            - "traefik.http.routers.keycloak.middlewares=forward-headers"

    postgres:
        image: postgres:17
        environment:
            POSTGRES_DB: ${POSTGRESQL_DB_NAME}
            POSTGRES_USER: ${POSTGRESQL_USER}
            POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./sql/init:/docker-entrypoint-initdb.d
        networks:
            - web

volumes:
    ssl-storage:
        name: ssl-storage
    postgres-data:
        name: postres-data

networks:
    web:
        driver: bridge
